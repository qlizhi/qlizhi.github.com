---
layout: post
styles: [syntax]
title: Linux网络驱动
---

## Linux内核启动过程（2.6内核）

1

## 内核空间和用户空间

内核态和用户态是硬件上的说法，从Intel80386开始CPU可以运行在ring0~ring3从高到低四个不同权限模式，但实际只用两个。“内核态”对应CPU的ring0层，是内核运行的模式，设备驱动程序就是运行在该模式下。“内核态”下可以控制内存映射方式、特殊状态寄存器、中断和DMA，可以无限制的访问所有处理器指令集以及全部内存和I/O空间；另一个被称为“用户态”对应ring3层，所有的用户程序都运行在该层。   
内核空间和用户空间是软件上的说法，Linux的虚拟地址空间为0~4G，Linux将这4G字节的空间分成两部分。最高的1G字节供内核使用，称为“内核空间”。两个模式分别引用不同的地址映射，换句话说，程序代码使用不同的地址空间。由此可见，想直接通过指针把“用户空间”的数据地址传递给内核是不可能的，必须要经过一步地址转换将“用户态”的地址转换成“内核态”的地址。如copy_to_user、copy_from_user等。

## Linux设备驱动基础

Linux一开始就将外部设备全都当成“文件”处理。从某种意义上讲，凡是能产生或接受消息的都是“文件”。  
应用程序通过/dev目录中的设备节点操作设备，通过/sys目录中的节点收集设备信息。

### Linux设备模型之udev

几年前，Linux操作系统还不成熟，管理设备节点的工作一点都不好玩。所有需要的节点（达到数千个）都必须事先在/dev目录下静态创建。在2.4内核中，引入了devfs，它支持设备节点的动态创建。devfs提供了在内存内的文件系统中创建设备节点的能力，而命名节点的任务还是落在设备驱动程序头上。但是，设备命名策略是可管理的，不应该与内核混在一起。而udev将设备管理的任务推向了用户空间。udev的工作取决于以下几项：
1. 内核中的sysfs支持。sysfs是Linux设备模型的一个重要组成部分，位于内存中，在启动时被挂载在/sys目录下（见/etc/fstab）。
1. 一套用户空间守护程序和实用工具，如udevd和udevinfo。
1. 用户自定义的规则，位于/etc/udev/rules.d/目录中。可以根据对应设备的特点设置规则。

为了理解udev的用法，我们先看一个例子。假定你有一个USB DVD驱动器或一个USB CD-RW驱动器。根据热插拔设备顺序的不同，一个被命名为/dev/sr0,另一个被命名为/dev/sr1。在没有udev的情况下，必须执行区分这些名字对应的设备。但是，有了udev以后，不管以什么顺序热插拔它们，都能分辨出二者，如DVD命名为/dev/subdvd,CD-RW命名为/dev/usbcdrw。  
首先，从sysfs相应的文件中提取产品信息。假定DVD驱动器被分配的设备节点为/dev/sr0，CD-RW驱动器的为/dev/sr1,使用udevinfo可收集设备信息：  
![Alt "1"](/static/images/post/LinuxDriver1.jpg)

